---
tags: rant
---

# 對電腦架構課程 project 的吐槽

上課的時候還說 APEX 架構是 MIPS 架構的簡化版。可是這改動也太多了吧！

* `JUMP` 本應該只接受一個原意輸入（literal），有什麼 use case 會讓跳轉的目標和變量有關啊！分支（`BZ` 和 `BNZ`）的目標也是啊，不是靜態寫死的麼！
* 每個指令的參數當然是固定的！怎麼可能既可以「寄存器，原意輸入，寄存器」的搭配，又可以「寄存器，寄存器，原意輸入」的搭配啊！甚至還可以三個都是寄存器！

另外這個 project 可以用 Java/C/C++。第一部分分開做的，我用了 C++，隊友用了 Java。第二部分一起做的時候，需要基於我們其中一個人的第一部分；隊友建議用他的第一部分的代碼，因爲 Java 比較「面向對象」。我想了一下，既然是分模塊，面向對象的實現方法應該各模塊耦合度更低，方便檢查和改寫；於是就答應了他。但是仔細看代碼，他這個哪裏面向對象了啊！搞了一個「流水線寄存器」的類，讓所有模塊（在流水線裏是「流水線級」）都能讀取；那些作爲模塊的類自身卻不保存任何狀態變量，這不是相當於在 C++ 裏面把那些流水線寄存器都變成全局變量了麼？！這貨是在用 Java 寫 C++ 啊！我 C++ 都寫的比他面向對象啊！

他的代碼風格是 CamelCase、mixedCase 和 snake_case 混合的（不論是類還是函數），不過 Eclipse 能一鍵重構，我就不多吐槽了。唯一值得欣慰的是他 Git 不用我教。主動提出用 BitBucket，也知道如何 merge，不錯。
